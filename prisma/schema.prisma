// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// الدور الأساسي (يمكن تطويره لاحقًا لـ RBAC كامل)
enum BaseRole {
  USER
  ADMIN
  SUPERADMIN
}

enum UserRole {
  JOBSEEKER
  EMPLOYER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  imageUrl  String?
  role      UserRole @default(JOBSEEKER)
  baseRole  BaseRole @default(USER)

  // الربط مع Clerk
  clerkId   String   @unique

  // العلاقات
  jobSeekerProfile JobSeekerProfile?
  employerProfile  EmployerProfile?
  jobs             Job[]         // Jobs posted by employer
  applications     Application[] // Applications submitted by job seeker

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JobSeekerProfile {
  id          String @id @default(cuid())
  userId      String @unique
  bio         String?
  skills      String[]
  resumeUrl   String?

  user User @relation(fields: [userId], references: [id])
}

model EmployerProfile {
  id          String @id @default(cuid())
  userId      String @unique
  companyName String
  website     String?
  description String?

  user User @relation(fields: [userId], references: [id])
}

// Job status enumeration
enum JobStatus {
  ACTIVE
  CLOSED
  DRAFT
}

// Application status enumeration
enum ApplicationStatus {
  PENDING
  REVIEWED
  ACCEPTED
  REJECTED
}

model Job {
  id          String    @id @default(cuid())
  title       String
  description String
  location    String
  salaryMin   Int?
  salaryMax   Int?
  company     String
  employerId  String
  status      JobStatus @default(ACTIVE)
  
  employer     User          @relation(fields: [employerId], references: [id])
  applications Application[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Application {
  id          String            @id @default(cuid())
  jobId       String
  applicantId String
  coverLetter String?
  status      ApplicationStatus @default(PENDING)
  
  job       Job  @relation(fields: [jobId], references: [id])
  applicant User @relation(fields: [applicantId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([jobId, applicantId]) // Prevent duplicate applications
}
